// (c) https://github.com/MontiCore/monticore

import de.monticore.ocl.*;
import de.monticore.*;

grammar MontiThings extends MontiArc,
                            ClockControl,
                            PortExtensions,
                            ConditionBasis,
                            PrePostCondition,
                            ConditionCatch,
                            SetDefinitions,
                            Behavior,
                            OCLExpressions,
                            OptionalOperators,
                            SIUnitTypes4Computing,
                            SIUnitLiterals
{
    start MACompilationUnit;

    /**
     * Component Types. Matches MontiArc's component types but additionally
     * allows a "component modifier", i.e. an additional keyword.
     *
     * @attribute name The type name of this component.
     * @attribute head Defines configuration options and extensions of this component.
     * @attribute componentInstances List of identifiers used to create instances
     *                               of this component type.
     *                               Only available for inner components.
     * @attribute body Contains the architectural elements of this component.

     */
    MTComponentType extends ComponentType =
      MTComponentModifier Name
      head:ComponentHead
      (ComponentInstance || ",")*
      body:ComponentBody
    ;

    /**
     * An additional keyword for components.
     * Interface keyword marks interface components, i.e. components without
     * behavior.
     * See [Wor16 Sec. 4.1.1]
     */
    MTComponentModifier =  ["interface"]? "component";

    /* ============================================================ */
    /* ================== ArcElement Insertions =================== */
    /* ============================================================ */

    MTCondition implements ArcElement = Condition;
    MTCatch implements ArcElement = ConditionCatch;

    /**
     * Store and restore component states in case of failure
     * Priority higher than 100 to prevent MontiCore from trying to
     * interpret "retain" as a component type's name.
     */
    MTRetainState implements ArcElement <110> = key("retain") key("state") ";";


    /* ============================================================ */
    /* ========================= Behavior ========================= */
    /* ============================================================ */

    interface MTBehavior extends ArcBehaviorElement = (Name@Port || ",")* MCJavaBlock;

    /**
     * Behavior of components get executed whenever all ports listed in front
     * of the MCJavaBlock have a new message available. If no ports are listed
     * the behavior is executed whenever any port has a new message available.
     */
    Behavior implements MTBehavior = "behavior" (Name@Port || ",")* MCJavaBlock;

    /**
     * InitBehavior of components get executed once all ports listed in front
     * of the MCJavaBlock have a new message available for the first time.
     * During this first cycle, normal behavior gets skipped and resumes
     * normally after.
     */
    InitBehavior implements MTBehavior = "init" (Name@Port || ",")* MCJavaBlock;

    /**
     * Behavior that gets executed in regular time intervals independent of the
     * availability of new messages.
     */
    MTEveryBlock implements ArcBehaviorElement = EveryBlock;

    // In contrast to MontiArc, we use the "statechart" keyword from the
    // statechart language instead of "automaton"
    @Override
    ArcStatechart implements ArcBehaviorElement =
      "statechart" "{"
        SCStatechartElement*
      "}";

    /**
     * Used to re-send the last message on a port.
     * Deprecated! Ports send a new message whenever they are assigned a new
     * value. To resend a value, assign the same value again.
     */
    @Deprecated
    PublishPort implements MCStatement =
        "publish" publishedPorts:(Name@Port || ",")+ ";";

    /**
     * IsPresentExpression can be used use a port regardless of whether it
     * has a value or to check if it has a value.
     * Hint: Directly accessing a port is allowed but means the value is
     * definitely accessed; if it doesn't exist, it will cause a run-time error
     *
     * Example: if (sensor?) actuator = sensor;
     * Example: actuator = sensor?;
     *
     * Deprecated! Name the ports which shall trigger a behavior block directly
     * in front of the behavior block. See "Behavior" non-terminal.
     */
    @Deprecated
    IsPresentExpression implements Expression <400>
        = NameExpression "?";
}
