/* (c) https://github.com/MontiCore/monticore */

plugins {
  id "monticore"
  id "jacoco"
  id "de.set.ecj" 
}

group = "montithings.languages"

def grammarDir = "$projectDir/src/main/grammars"
def reportsDir = "$buildDir/generated-sources/monticore/sourcecode/reports/"

sourceSets {
  main {
    java.srcDirs += ["$buildDir/generated-sources/monticore/sourcecode"]
  }
  test {
    java.srcDirs += ["$buildDir/generated-test-sources/monticore/sourcecode"]
  }
  grammars {
    resources {
      srcDirs(grammarDir, reportsDir)
      include("**/*.mc4", "**/*.cd")
    }
  }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.deprecation = false
    options.warnings = false
    options.headerOutputDirectory.convention(null)
}


test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

configurations { grammar }

dependencies {
  grammar "de.monticore:monticore-grammar:$monticore_version:$grammars_classifier"
  grammar "de.monticore.lang:cd4analysis:$cd4a_version:$grammars_classifier"

  implementation "de.se_rwth.commons:se-commons-logging:$se_commons_version"
  implementation "com.google.guava:guava:$guava_version"
  implementation "de.monticore.lang:cd4analysis:$cd4a_version"
  implementation "org.antlr:antlr4-runtime:$antlr_version"
  implementation "de.monticore:monticore-runtime:$monticore_version"
  implementation "de.monticore:monticore-grammar:$monticore_version"
  implementation "de.monticore:javaDSL:$javadsl_version"
  implementation "org.apache.commons:commons-lang3:3.9"
  implementation "org.codehaus.janino:janino:$janino_version"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
  testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
  testImplementation "ch.qos.logback:logback-classic:$logback_version"
}

task generateGrammarCDLangExtension(type: MCTask) {
  grammar = file "$grammarDir/CDLangExtension.mc4"
  outputDir = file "$buildDir/generated-sources/monticore/sourcecode"
  handcodedPath = [file("$projectDir/src/main/java")]
  def upToDate = incCheck("CDLangExtension.mc4")
  outputs.upToDateWhen { upToDate }
}

compileJava {
  dependsOn project.collect { it.tasks.findAll { task -> task.name.startsWith("generateGrammar") } }
}

java {
  //withJavadocJar()
  withSourcesJar()
  registerFeature("grammars") {
    usingSourceSet(sourceSets.grammars)
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) { from components.java }
  }
  repositories.maven {
    name = "$SE_Nexus_ID"
    credentials.username mavenUser
    credentials.password mavenPassword
    url = version.endsWith('SNAPSHOT') ? "$snapshotsRepoUrl" : "$releasesRepoUrl"
  }
}