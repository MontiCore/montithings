/* (c) https://github.com/MontiCore/monticore */

plugins {
  id "monticore"
}

group = 'montithings.languages'

def grammarDir = "$projectDir/src/main/grammars"

sourceSets {
  main {
    java.srcDirs += ["$buildDir/generated-sources/monticore/sourcecode"]
  }
  test {
    java.srcDirs += ["$buildDir/generated-test-sources/monticore/sourcecode"]
  }
}

test { useJUnitPlatform() }

configurations { grammar }

dependencies {
  grammar "de.monticore:monticore-grammar:$monticore_version:$grammars_classifier"
  grammar "de.monticore.lang:cd4analysis:$cd4a_version:$grammars_classifier"

  implementation 'de.se_rwth.commons:se-commons-logging:$se_commons_version'
  implementation 'com.google.guava:guava:$guava_version'
  implementation 'de.monticore.lang:cd4analysis:$cd4a_version'
  implementation 'org.antlr:antlr4-runtime:4.7.1'
  implementation 'de.monticore:monticore-runtime:6.1.0.1'
  implementation 'de.monticore:monticore-grammar:6.1.0.1'
  implementation 'de.monticore.lang:cd4analysis:$cd4a_version'
  implementation 'de.monticore.lang:cd4analysis:$cd4a_version'
  implementation 'de.monticore:javaDSL:$javadsl_version'
  implementation 'org.apache.commons:commons-lang3:3.9'
  testImplementation 'de.monticore:monticore-runtime:6.1.0.1'
  testImplementation 'ch.qos.logback:logback-classic:$logback_version'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version'
  compileOnly 'de.monticore:monticore-grammar:6.1.0.1'
  compileOnly 'de.monticore:javaDSL:$javadsl_version'
}

task generateGrammarCDLangExtension(type: MCTask) {
  grammar = file "$grammarDir/CDLangExtension.mc4"
  outputDir = file "$buildDir/generated-sources/monticore/sourcecode"
  handcodedPath = [file("$projectDir/src/main/java")]
  def upToDate = incCheck("CDLangExtension.mc4")
  outputs.upToDateWhen { upToDate }
}

//TODO maven assembly plugin equivalent?

//TODO surefire?

compileJava {
  dependsOn project.collect { it.tasks.findAll { task -> task.name.startsWith("generateGrammar") } }
}

task grammars_Jar(type: Jar) {
  from "$projectDir/src/main/grammars"
  archiveClassifier = "$grammars_classifier"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = "$project.name"
      from components.java
      artifact grammars_Jar
    }
  }
}