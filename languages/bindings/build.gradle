/* (c) https://github.com/MontiCore/monticore */

plugins {
  id "monticore"
}

group = "montithings.languages"

def grammarDir = "$projectDir/src/main/grammars"
def reportsDir = "$buildDir/generated-sources/monticore/sourcecode/reports/"

sourceSets {
  main {
    java.srcDirs += ["$buildDir/generated-sources/monticore/sourcecode"]
  }
  test {
    java.srcDirs += ["$buildDir/generated-test-sources/monticore/sourcecode"]
  }
  grammars {
    resources {
      srcDirs(grammarDir, reportsDir)
      include("**/*.mc4", "**/*.cd")
    }
  }
}

test { useJUnitPlatform() }

configurations {
  grammar
  librarymodels
}

dependencies {
  grammar "de.monticore:monticore-grammar:$monticore_version:$grammars_classifier"

  librarymodels "montiarc.libraries:maJavaLib:$majavalib_version"
  implementation 'montiarc.languages:montiarc-fe:$montiarc_version'
  implementation 'de.se_rwth.commons:se-commons-logging:$se_commons_version'
  implementation 'com.google.guava:guava:$guava_version'
  implementation 'de.monticore.lang:cd4analysis:1.6.0'
  implementation 'org.antlr:antlr4-runtime:4.7.1'
  implementation 'de.monticore:monticore-runtime:6.1.0.1'
  implementation 'de.monticore:monticore-grammar:6.1.0.1'
  implementation 'de.monticore:javaDSL:$javadsl_version'
  implementation 'org.apache.commons:commons-lang3:3.9'
  implementation project(':generators:cd2cpp')
  implementation project(':languages:montithings')
  implementation 'org.assertj:assertj-core:$assertj_version'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
  testImplementation 'de.monticore:monticore-runtime:6.1.0.1'
  testImplementation 'ch.qos.logback:logback-classic:$logback_version'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.1.0'
  compileOnly 'de.monticore:monticore-grammar:6.1.0.1'
  compileOnly 'de.monticore:javaDSL:$javadsl_version'
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
  testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
}

task unpack_librarymodels(type: Sync) {
  dependsOn configurations.librarymodels

  from {
    configurations.librarymodels.collect { zipTree(it) }
  }
  into "$buildDir/$librarymodels_classifier"
}

task generateGrammarBindings(type: MCTask) {
  grammar = file "src/main/grammars/Bindings.mc4"
  outputDir = file "$buildDir/generated-sources/monticore/sourcecode"
  handcodedPath = [file("$projectDir/src/main/java")]
  def upToDate = incCheck("Bindings.mc4")
  outputs.upToDateWhen { upToDate }
}

//TODO surefire?

compileJava {
  dependsOn project.collect { it.tasks.findAll { task -> task.name.startsWith("generateGrammar") } }
}

java {
  //withJavadocJar()
  withSourcesJar()
  registerFeature("grammars") {
    usingSourceSet(sourceSets.grammars)
  }
}

publishing {
  publications {
    mavenJava(MavenPublication) { from components.java }
  }
  repositories.maven {
    name = "$SE_Nexus_ID"
    credentials.username mavenUser
    credentials.password mavenPassword
    url = version.endsWith('SNAPSHOT') ? "$snapshotsRepoUrl" : "$releasesRepoUrl"
  }
}