// (c) https://github.com/MontiCore/monticore

/* Alpha-version: This is intended to become a MontiCore stable grammar. */

/**
 * This grammar is intended for modelling semantic requirements which a MontiThings
 * application has for components it connects with at run-time. This is done by modeling
 * inputs on incoming ports and the expected outgoing values.
 */
component grammar SDForMTTest extends de.monticore.lang.SD4Development, de.monticore.SIUnitLiterals
{

  // interface SD4MTElement extends SDElement;

  /*AfterTestStatement implements SD4MTElement =
    "after" TimeSpan;

  interface TimeSpan;

  ConcreteTimeSpan implements TimeSpan =
    SIUnitLiteral;

  TimeSpanSet implements TimeSpan =
    "[" from:SIUnitLiteral? "," to:SIUnitLiteral? "]";*/

  TestBlock =
    "test" ("(" ((Name ":" Expression) | ",") ")")? "{"
      SendValueOnPort+
      WaitStatement
      ExpectValueOnPort+
    "}";

  SendValueOnPort = Name "=" Expression ";" ;
  WaitStatement = "wait" SIUnitLiteral ";" ;
  ExpectValueOnPort = "assert" Name "==" Expression ";" ;
}
