// (c) https://github.com/MontiCore/monticore

/* Alpha-version: This is intended to become a MontiCore stable grammar. */

/**
 * This grammar can be used to define sets of values using, e.g., single values,
 * ranges of values, or regular expressions.
 */
component grammar SetDefinitions extends de.monticore.literals.MCCommonLiterals,
                                         de.monticore.ocl.SetExpressions
{
    // range of allowed values (optionally with stepsize)
    @Override
    SetValueRange implements SetCollectionItem =
      lowerBound:Expression
      (".." stepsize:Expression)?
      ".." upperBound:Expression
    ;

    // RegEx to which value has to conform
    SetValueRegEx implements SetCollectionItem =
      "format" ":" format:StringLiteral
    ;

    ListExpression implements Expression <40> =
      "[" (Expression || ",")* "]"
    ;

    MapExpression implements Expression <40> =
      "{" (KeyValuePair || ",")* "}"
    ;

    KeyValuePair =
      key:Expression ":" value:Expression
    ;
}
