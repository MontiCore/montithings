/* generated by template templates.de.monticore.lang.tagschema.ValuedTagType*/


package nfp.PhysicalTags;

import de.monticore.lang.tagging._symboltable.TagKind;
import de.monticore.lang.tagging._symboltable.TagSymbol;

import org.jscience.physics.amount.Amount;
import javax.measure.quantity.Mass;
import javax.measure.unit.Unit;

/**
 * Created by ValuedTagType.ftl
 */
public class WeightSymbol extends TagSymbol {
  public static final WeightKind KIND = WeightKind.INSTANCE;

  public WeightSymbol(Amount<Mass> value) {
    this(KIND, value);
  }

  public WeightSymbol(Number number, Unit<Mass> unit) {
    this(KIND, number, unit);
  }

  protected WeightSymbol(WeightKind kind, Amount<Mass> value) {
    super(kind, value);
  }

  protected WeightSymbol(WeightKind kind, Number number, Unit<Mass> unit) {
    this(kind, number.toString().contains(".") ?
      Amount.valueOf(number.doubleValue(), unit) :
      Amount.valueOf(number.intValue(),
          unit));
  }

  public Amount<Mass> getValue() {
     return getValue(0);
  }

  public Number getNumber() {
    return getValue().getExactValue();
  }

  public Unit<Mass> getUnit() {
    return getValue().getUnit();
  }

  @Override
  public String toString() {
    return String.format("Weight = %s %s",
      getNumber(), getUnit());
  }

  public static class WeightKind extends TagKind {
    public static final WeightKind INSTANCE = new WeightKind();

    protected WeightKind() {
    }
  }
}