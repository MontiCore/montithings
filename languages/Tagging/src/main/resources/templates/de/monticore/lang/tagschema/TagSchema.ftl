${tc.signature("packageName", "schemaName", "tagTypeNames")}

package ${packageName}.${schemaName};

import de.monticore.lang.tagging._symboltable.TaggingResolver;
import de.monticore.symboltable.resolving.CommonResolvingFilter;

/**
 * generated by TagSchema.ftl
 */
public class ${schemaName} {

  protected static ${schemaName} instance = null;

  protected ${schemaName}() {}

  protected static ${schemaName} getInstance() {
    if (instance == null) {
      instance = new ${schemaName}();
    }
    return instance;
  }

  protected void doRegisterTagTypes(TaggingResolver tagging) {
    <#list tagTypeNames as tagTypeName>
    tagging.addTagSymbolCreator(new ${tagTypeName}SymbolCreator());
    tagging.addTagSymbolResolvingFilter(CommonResolvingFilter.create(${tagTypeName}Symbol.KIND));
    </#list>
  }

  public static void registerTagTypes(TaggingResolver tagging) {
    getInstance().doRegisterTagTypes(tagging);
  }

}