package de.monticore.lang;

grammar SD4ComponentTesting extends de.monticore.lang.SD4Development,
                                    MontiArc  {
    start SD4Artifact;


    SD4Artifact =
      ("package" packageDeclaration:MCQualifiedName& ";")?
      MCImportStatement*
      TestDiagram;


    TestDiagram implements Diagram =
      ("testdiagram" | "td") Name "for" mainComponent:MCObjectType "{"
        SD4CElement*
      "}";


    interface SD4CComponent;

    SD4CObjectPort implements SD4CComponent =
      component:MCQualifiedName "." port:MCQualifiedName;

    SD4CPort implements SD4CComponent =
      port:MCQualifiedName;


    interface SD4CElement;

    SD4CConnection implements SD4CElement =
      source:SD4CComponent "->" sink:SD4CComponent ":" value:Literal;

    SD4CCInput implements SD4CElement =
      "->" sink:SD4CComponent ":" value:Literal;

    SD4CCOutput implements SD4CElement =
      source:SD4CComponent "->" ":" value:Literal;

    SD4CExpression implements SD4CElement =
      key("assert") Expression;
}
