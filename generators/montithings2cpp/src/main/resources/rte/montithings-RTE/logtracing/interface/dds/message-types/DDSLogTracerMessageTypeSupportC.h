// (c) https://github.com/MontiCore/monticore

// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p19
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_DDSLOGTRACERMESSAGETYPESUPPORTC_H_
#define _TAO_IDL_DDSLOGTRACERMESSAGETYPESUPPORTC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "DDSLogTracerMessageC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace DDSLogTracerMessage
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< DDSLogTracerMessage::Request, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> RequestSeq;
  

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_DDSLOGTRACERMESSAGE_REQUESTTYPESUPPORT__VAR_OUT_CH_)
#define _DDSLOGTRACERMESSAGE_REQUESTTYPESUPPORT__VAR_OUT_CH_

  class RequestTypeSupport;
  typedef RequestTypeSupport *RequestTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        RequestTypeSupport
      >
    RequestTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        RequestTypeSupport
      >
    RequestTypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  RequestTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef RequestTypeSupport_ptr _ptr_type;
    typedef RequestTypeSupport_var _var_type;
    typedef RequestTypeSupport_out _out_type;

    // The static operations.
    static RequestTypeSupport_ptr _duplicate (RequestTypeSupport_ptr obj);

    static void _tao_release (RequestTypeSupport_ptr obj);

    static RequestTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestTypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestTypeSupport (void);

    

    virtual ~RequestTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (RequestTypeSupport (const RequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RequestTypeSupport (RequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (RequestTypeSupport &operator= (const RequestTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RequestTypeSupport &operator= (RequestTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_DDSLOGTRACERMESSAGE_REQUESTDATAWRITER__VAR_OUT_CH_)
#define _DDSLOGTRACERMESSAGE_REQUESTDATAWRITER__VAR_OUT_CH_

  class RequestDataWriter;
  typedef RequestDataWriter *RequestDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        RequestDataWriter
      >
    RequestDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        RequestDataWriter
      >
    RequestDataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  RequestDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef RequestDataWriter_ptr _ptr_type;
    typedef RequestDataWriter_var _var_type;
    typedef RequestDataWriter_out _out_type;

    // The static operations.
    static RequestDataWriter_ptr _duplicate (RequestDataWriter_ptr obj);

    static void _tao_release (RequestDataWriter_ptr obj);

    static RequestDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::DDSLogTracerMessage::Request & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::DDSLogTracerMessage::Request & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::DDSLogTracerMessage::Request & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::DDSLogTracerMessage::Request & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::DDSLogTracerMessage::Request & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::DDSLogTracerMessage::Request & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::DDSLogTracerMessage::Request & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::DDSLogTracerMessage::Request & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::DDSLogTracerMessage::Request & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::DDSLogTracerMessage::Request & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestDataWriter (void);

    

    virtual ~RequestDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (RequestDataWriter (const RequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RequestDataWriter (RequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (RequestDataWriter &operator= (const RequestDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RequestDataWriter &operator= (RequestDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_DDSLOGTRACERMESSAGE_REQUESTDATAREADER__VAR_OUT_CH_)
#define _DDSLOGTRACERMESSAGE_REQUESTDATAREADER__VAR_OUT_CH_

  class RequestDataReader;
  typedef RequestDataReader *RequestDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        RequestDataReader
      >
    RequestDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        RequestDataReader
      >
    RequestDataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  RequestDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef RequestDataReader_ptr _ptr_type;
    typedef RequestDataReader_var _var_type;
    typedef RequestDataReader_out _out_type;

    // The static operations.
    static RequestDataReader_ptr _duplicate (RequestDataReader_ptr obj);

    static void _tao_release (RequestDataReader_ptr obj);

    static RequestDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static RequestDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RequestDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::DDSLogTracerMessage::RequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::DDSLogTracerMessage::RequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::DDSLogTracerMessage::Request & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::DDSLogTracerMessage::Request & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::DDSLogTracerMessage::RequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::DDSLogTracerMessage::RequestSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::DDSLogTracerMessage::RequestSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::DDSLogTracerMessage::Request & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::DDSLogTracerMessage::Request & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RequestDataReader (void);

    

    virtual ~RequestDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (RequestDataReader (const RequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RequestDataReader (RequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (RequestDataReader &operator= (const RequestDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RequestDataReader &operator= (RequestDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module DDSLogTracerMessage

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace DDSLogTracerMessage
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< DDSLogTracerMessage::Response, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ResponseSeq;
  

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_DDSLOGTRACERMESSAGE_RESPONSETYPESUPPORT__VAR_OUT_CH_)
#define _DDSLOGTRACERMESSAGE_RESPONSETYPESUPPORT__VAR_OUT_CH_

  class ResponseTypeSupport;
  typedef ResponseTypeSupport *ResponseTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        ResponseTypeSupport
      >
    ResponseTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        ResponseTypeSupport
      >
    ResponseTypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  ResponseTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef ResponseTypeSupport_ptr _ptr_type;
    typedef ResponseTypeSupport_var _var_type;
    typedef ResponseTypeSupport_out _out_type;

    // The static operations.
    static ResponseTypeSupport_ptr _duplicate (ResponseTypeSupport_ptr obj);

    static void _tao_release (ResponseTypeSupport_ptr obj);

    static ResponseTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static ResponseTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ResponseTypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ResponseTypeSupport (void);

    

    virtual ~ResponseTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (ResponseTypeSupport (const ResponseTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ResponseTypeSupport (ResponseTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (ResponseTypeSupport &operator= (const ResponseTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ResponseTypeSupport &operator= (ResponseTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_DDSLOGTRACERMESSAGE_RESPONSEDATAWRITER__VAR_OUT_CH_)
#define _DDSLOGTRACERMESSAGE_RESPONSEDATAWRITER__VAR_OUT_CH_

  class ResponseDataWriter;
  typedef ResponseDataWriter *ResponseDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        ResponseDataWriter
      >
    ResponseDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        ResponseDataWriter
      >
    ResponseDataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  ResponseDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef ResponseDataWriter_ptr _ptr_type;
    typedef ResponseDataWriter_var _var_type;
    typedef ResponseDataWriter_out _out_type;

    // The static operations.
    static ResponseDataWriter_ptr _duplicate (ResponseDataWriter_ptr obj);

    static void _tao_release (ResponseDataWriter_ptr obj);

    static ResponseDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static ResponseDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ResponseDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::DDSLogTracerMessage::Response & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::DDSLogTracerMessage::Response & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::DDSLogTracerMessage::Response & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::DDSLogTracerMessage::Response & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::DDSLogTracerMessage::Response & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::DDSLogTracerMessage::Response & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::DDSLogTracerMessage::Response & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::DDSLogTracerMessage::Response & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::DDSLogTracerMessage::Response & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::DDSLogTracerMessage::Response & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ResponseDataWriter (void);

    

    virtual ~ResponseDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (ResponseDataWriter (const ResponseDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ResponseDataWriter (ResponseDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (ResponseDataWriter &operator= (const ResponseDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ResponseDataWriter &operator= (ResponseDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_DDSLOGTRACERMESSAGE_RESPONSEDATAREADER__VAR_OUT_CH_)
#define _DDSLOGTRACERMESSAGE_RESPONSEDATAREADER__VAR_OUT_CH_

  class ResponseDataReader;
  typedef ResponseDataReader *ResponseDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        ResponseDataReader
      >
    ResponseDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        ResponseDataReader
      >
    ResponseDataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class  ResponseDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef ResponseDataReader_ptr _ptr_type;
    typedef ResponseDataReader_var _var_type;
    typedef ResponseDataReader_out _out_type;

    // The static operations.
    static ResponseDataReader_ptr _duplicate (ResponseDataReader_ptr obj);

    static void _tao_release (ResponseDataReader_ptr obj);

    static ResponseDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static ResponseDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ResponseDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::DDSLogTracerMessage::ResponseSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::DDSLogTracerMessage::ResponseSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::DDSLogTracerMessage::Response & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::DDSLogTracerMessage::Response & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::DDSLogTracerMessage::ResponseSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::DDSLogTracerMessage::ResponseSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::DDSLogTracerMessage::ResponseSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::DDSLogTracerMessage::Response & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::DDSLogTracerMessage::Response & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ResponseDataReader (void);

    

    virtual ~ResponseDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (ResponseDataReader (const ResponseDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ResponseDataReader (ResponseDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (ResponseDataReader &operator= (const ResponseDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ResponseDataReader &operator= (ResponseDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module DDSLogTracerMessage

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_DDSLOGTRACERMESSAGE_REQUESTTYPESUPPORT__TRAITS_)
#define _DDSLOGTRACERMESSAGE_REQUESTTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::DDSLogTracerMessage::RequestTypeSupport>
  {
    static ::DDSLogTracerMessage::RequestTypeSupport_ptr duplicate (
        ::DDSLogTracerMessage::RequestTypeSupport_ptr p);
    static void release (
        ::DDSLogTracerMessage::RequestTypeSupport_ptr p);
    static ::DDSLogTracerMessage::RequestTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDSLogTracerMessage::RequestTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDSLOGTRACERMESSAGE_REQUESTDATAWRITER__TRAITS_)
#define _DDSLOGTRACERMESSAGE_REQUESTDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDSLogTracerMessage::RequestDataWriter>
  {
    static ::DDSLogTracerMessage::RequestDataWriter_ptr duplicate (
        ::DDSLogTracerMessage::RequestDataWriter_ptr p);
    static void release (
        ::DDSLogTracerMessage::RequestDataWriter_ptr p);
    static ::DDSLogTracerMessage::RequestDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDSLogTracerMessage::RequestDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDSLOGTRACERMESSAGE_REQUESTDATAREADER__TRAITS_)
#define _DDSLOGTRACERMESSAGE_REQUESTDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDSLogTracerMessage::RequestDataReader>
  {
    static ::DDSLogTracerMessage::RequestDataReader_ptr duplicate (
        ::DDSLogTracerMessage::RequestDataReader_ptr p);
    static void release (
        ::DDSLogTracerMessage::RequestDataReader_ptr p);
    static ::DDSLogTracerMessage::RequestDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDSLogTracerMessage::RequestDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDSLOGTRACERMESSAGE_RESPONSETYPESUPPORT__TRAITS_)
#define _DDSLOGTRACERMESSAGE_RESPONSETYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::DDSLogTracerMessage::ResponseTypeSupport>
  {
    static ::DDSLogTracerMessage::ResponseTypeSupport_ptr duplicate (
        ::DDSLogTracerMessage::ResponseTypeSupport_ptr p);
    static void release (
        ::DDSLogTracerMessage::ResponseTypeSupport_ptr p);
    static ::DDSLogTracerMessage::ResponseTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDSLogTracerMessage::ResponseTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDSLOGTRACERMESSAGE_RESPONSEDATAWRITER__TRAITS_)
#define _DDSLOGTRACERMESSAGE_RESPONSEDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDSLogTracerMessage::ResponseDataWriter>
  {
    static ::DDSLogTracerMessage::ResponseDataWriter_ptr duplicate (
        ::DDSLogTracerMessage::ResponseDataWriter_ptr p);
    static void release (
        ::DDSLogTracerMessage::ResponseDataWriter_ptr p);
    static ::DDSLogTracerMessage::ResponseDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDSLogTracerMessage::ResponseDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDSLOGTRACERMESSAGE_RESPONSEDATAREADER__TRAITS_)
#define _DDSLOGTRACERMESSAGE_RESPONSEDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::DDSLogTracerMessage::ResponseDataReader>
  {
    static ::DDSLogTracerMessage::ResponseDataReader_ptr duplicate (
        ::DDSLogTracerMessage::ResponseDataReader_ptr p);
    static void release (
        ::DDSLogTracerMessage::ResponseDataReader_ptr p);
    static ::DDSLogTracerMessage::ResponseDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDSLogTracerMessage::ResponseDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "DDSLogTracerMessageTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

